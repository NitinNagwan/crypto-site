{"version":3,"sources":["services/CryptoApi.js","services/CryptoNewsApi.js","app/store.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","cryptoApi","useGetCryptosQuery","useGetCryptoDetilsQuery","useGetCryptoHistoryQuery","useGetCryptoExchangeQuery","_reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_0__","_reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_1__","cryptoApiHeaders","X-RapidAPI-Host","X-RapidAPI-Key","createRequest","url","headers","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","concat","getCryptoDetils","coinId","getCryptoHistory","_ref","timePeriod","getCryptoExchange","cryptoNewsApi","useGetCryptoNewsQuery","cryptoNewsApiHeaders","X-BingApis-SDK","getCryptoNews","newsCatagory","configureStore","reducer","_reducer","Object","defineProperty","middleware","getDefaultMiddleware","createAction","SiteRoutes","React","lazy","Promise","all","e","then","bind","container","document","getElementById","createRoot","render","react_default","a","createElement","StrictMode","es","store","react","fallback","skeleton","active"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAA,IAAAC,EAAAR,EAAA,IAAAS,EAAAT,EAAA,GAEMU,EAAmB,CACvBC,kBAAmB,8BACnBC,iBAAkB,sDAKdC,EAAgB,SAACC,GAAD,MAAU,CAC9BA,MACAC,QAASL,IAGEP,EAAYa,YAAU,CACjCC,YAAa,YACbC,UAAWC,YAAe,CAAEC,QATd,wCAUdC,UAAW,SAACC,GAAD,MAAc,CACvBC,WAAYD,EAAQE,MAAM,CACxBA,MAAO,SAACC,GAAD,OAAWZ,EAAa,gBAAAa,OAAiBD,OAGlDE,gBAAiBL,EAAQE,MAAM,CAC7BA,MAAO,SAACI,GAAD,OAAYf,EAAa,SAAAa,OAAUE,OAE5CC,iBAAkBP,EAAQE,MAAM,CAC9BA,MAAO,SAAAM,GAAA,IAAGF,EAAHE,EAAGF,OAAQG,EAAXD,EAAWC,WAAX,OACLlB,EAAa,SAAAa,OAAUE,EAAV,wBAAAF,OAAuCK,OAGxDC,kBAAmBV,EAAQE,MAAM,CAC/BA,MAAO,kBAAMX,EAAa,wCAM9BT,EAIED,EAJFC,mBACAC,EAGEF,EAHFE,wBACAC,EAEEH,EAFFG,yBACAC,EACEJ,EADFI,2DCxCFP,EAAAC,EAAAC,EAAA,sBAAA+B,IAAAjC,EAAAC,EAAAC,EAAA,sBAAAgC,IAAA,IAAA1B,EAAAR,EAAA,IAAAS,EAAAT,EAAA,GAEMmC,EAAuB,CAC3BC,iBAAkB,OAClBzB,kBAAmB,mCACnBC,iBAAkB,sDAUPqB,EAAgBjB,YAAU,CACrCC,YAAa,gBACbC,UAAWC,YAAe,CAAEC,QATd,6CAUdC,UAAW,SAACC,GAAD,MAAc,CACvBe,cAAef,EAAQE,MAAM,CAC3BA,MAAO,SAAAM,GAAA,IAAGQ,EAAHR,EAAGQ,aAAcb,EAAjBK,EAAiBL,MAAjB,MAVmB,CAC9BX,IASqD,kBAAAY,OAAmBY,EAAnB,uDAAAZ,OAAqFD,GAR1IV,QAASoB,UAaID,EAA0BD,EAA1BC,kMCpBAK,cAAe,CAC5BC,SAAOC,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,EACJtC,IAAUc,YAAcd,IAAUqC,SAD9BE,OAAAC,EAAA,EAAAD,CAAAD,EAEJR,IAAchB,YAAcgB,IAAcO,SAFtCC,GAIPG,WAAY,SAACC,GAAD,OACVA,IAAuBnB,OACrBvB,IAAUyC,WACVX,IAAcW,kBAIGE,8BCRjBC,EAAaC,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAnD,EAAAoD,EAAA,GAAApD,EAAAoD,EAAA,KAAAC,KAAArD,EAAAsD,KAAA,aAC9BC,EAAYC,SAASC,eAAe,QAC7BC,qBAAWH,GACnBI,OACHC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,WAAP,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUC,MAAOA,GACfL,EAAAC,EAAAC,cAACI,EAAA,SAAD,CAAUC,SAAUP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUC,QAAM,KAClCT,EAAAC,EAAAC,cAACf,EAAD","file":"static/js/main.b704744b.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeaders = {\n  \"X-RapidAPI-Host\": \"coinranking1.p.rapidapi.com\",\n  \"X-RapidAPI-Key\": \"2b944f0273msh634d19693fe34bcp1ad8cdjsna013a9bb9c8a\",\n};\n\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\n\nconst createRequest = (url) => ({\n  url,\n  headers: cryptoApiHeaders,\n});\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n\n    getCryptoDetils: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timePeriod }) =>\n        createRequest(`/coin/${coinId}/history?timeperiod=${timePeriod}`),\n    }),\n\n    getCryptoExchange: builder.query({\n      query: () => createRequest(`/coin/Qwsogvtv82FCd/exchanges`),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetilsQuery,\n  useGetCryptoHistoryQuery,\n  useGetCryptoExchangeQuery,\n} = cryptoApi;\n\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsApiHeaders = {\n  \"X-BingApis-SDK\": \"true\",\n  \"X-RapidAPI-Host\": \"bing-news-search1.p.rapidapi.com\",\n  \"X-RapidAPI-Key\": \"2b944f0273msh634d19693fe34bcp1ad8cdjsna013a9bb9c8a\",\n};\n\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\n\nconst createRequest = (url) => ({\n  url,\n  headers: cryptoNewsApiHeaders,\n});\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCatagory, count }) => createRequest(`/news/search?q=${newsCatagory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n\n","import { configureStore, createAction } from \"@reduxjs/toolkit\";\n\nimport { cryptoApi } from \"../services/CryptoApi\";\nimport { cryptoNewsApi } from \"../services/CryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(\n      cryptoApi.middleware,\n      cryptoNewsApi.middleware\n    ),\n});\n\nexport const actions = createAction();\n","import React, { Suspense } from \"react\";\n\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nimport { createRoot } from \"react-dom/client\";\nimport { Skeleton } from \"antd\";\nconst SiteRoutes = React.lazy(() => import(\"./SiteRoutes\"));\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Suspense fallback={<Skeleton active />}>\n        <SiteRoutes />\n      </Suspense>\n    </Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}