{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","components/CryptoCurrencies.jsx","components/News.jsx","components/Homepage.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js"],"names":["module","exports","__webpack_require__","p","Navbar","_useState","useState","_useState2","Object","slicedToArray","activeMenu","setActtiveMenu","_useState3","_useState4","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","react_default","a","createElement","Fragment","className","avatar","src","icon","typography","Title","level","react_router_dom","to","es_button","onClick","MenuOutlined","menu","theme","Item","key","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","CryptoCurrencies","_ref","simplified","count","_useGetCryptosQuery","useGetCryptosQuery","data","isFetching","coins","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","coin","name","toLowerCase","includes","skeleton","active","input","placeholder","onChange","e","target","value","row","gutter","map","i","col","xs","sm","lg","concat","uuid","card","hoverable","title","rank","extra","iconUrl","alt","millify","price","marketCap","change","Typography","Text","Option","Select","demoImage","News","newsCategory","setNewsCategory","cryptoNews","useGetCryptoNewsQuery","newsCatagory","span","es_select","showSearch","optionFilterProp","filterOption","option","children","indexOf","news","datePublished","href","url","rel","image","thumbnail","contentUrl","description","length","substring","provider","moment","startOf","fromNow","Homepage","setOffset","globalstats","onScroll","pageYOffset","passive","stats","Homepage_Title","statistic","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Exchanges","_useGetCryptoExchange","useGetCryptoExchangeQuery","exchanges","exchange","collapse","CollapsePanel_default","showArrow","header","Exchanges_Text","btcPrice","numberOfMarkets","coinrankingUrl","HTMLReactParser","ChartJS","register","apply","toConsumableArray","registerables","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimeStamp","history","push","Date","timestamp","toLocaleDateString","labels","datasets","type","label","fill","backgroundColor","borderColor","LineChart_Title","dist","options","scales","yAxes","ticks","suggestedMin","beginAtZero","CryptoDetails","coinId","useParams","timePeriod","setTimePeriod","_useGetCryptoDetilsQu","useGetCryptoDetilsQuery","_useGetCryptoHistoryQ","useGetCryptoHistoryQuery","isLoading","cryptoDetails","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","circulating","CryptoDetails_Title","symbol","defaultValue","date","CryptoDetails_Option","CryptoDetails_Text","_ref2","links","link","App","layout","react_router","path","element","exact","style","color","textAlign","space","d","__webpack_exports__"],"mappings":"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","file":"static/js/2.a62c5884.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cryptocurrency.88532732.png\";","import React, { useEffect, useState } from \"react\";\nimport { Menu, Typography, Avatar, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\nimport icon from \"../images/cryptocurrency.png\";\n\nexport default function Navbar() {\n  const [activeMenu, setActtiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(null);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize < 768) {\n      setActtiveMenu(false);\n    } else {\n      setActtiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <>\n      <div className=\"nav-container navbar\">\n        <div className=\"logo-container\">\n          <Avatar src={icon} />\n          <Typography.Title level={3} className=\"logo\">\n            <Link to=\"/\">Cryptoverse</Link>\n          </Typography.Title>\n          <Button\n            className=\"menu-control-container\"\n            onClick={() => setActtiveMenu(!activeMenu)}\n          >\n            <MenuOutlined />\n          </Button>\n        </div>\n        {activeMenu && (\n          <Menu theme=\"dark\">\n            <crossOriginIsolated />\n            <Menu.Item key=\"home\" icon={<HomeOutlined />}>\n              <Link to=\"/\">Home</Link>\n            </Menu.Item>\n            <Menu.Item key=\"cryptocurrency\" icon={<FundOutlined />}>\n              <Link to=\"/cryptocurrencies\">Cryptocurrenies</Link>\n            </Menu.Item>\n            <Menu.Item key=\"exchanges\" icon={<MoneyCollectOutlined />}>\n              <Link to=\"/exchanges\">Exchanges</Link>\n            </Menu.Item>\n            <Menu.Item key=\"news\" icon={<BulbOutlined />}>\n              <Link to=\"/news\">News</Link>\n            </Menu.Item>\n          </Menu>\n        )}\n      </div>\n    </>\n  );\n}\n","import { Card, Col, Input, Row, Skeleton } from \"antd\";\nimport millify from \"millify\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useGetCryptosQuery } from \"../services/CryptoApi\";\n\nexport default function CryptoCurrencies({ simplified }) {\n  const count = simplified ? 10 : 100;\n  const { data, isFetching } = useGetCryptosQuery(count);\n\n  const [cryptos, setCryptos] = useState(data && data.data.coins);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  let coins = [];\n\n  useEffect(() => {\n    const filteredData = coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    setCryptos(filteredData);\n  }, [data, searchTerm]);\n\n  if (isFetching || !data) return <Skeleton active />;\n  else coins = data.data.coins;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      )}\n      <Row\n        gutter={[32, 32]}\n        className=\"crypto-card-container\"\n       \n      >\n        {cryptos.map((coin, i) => {\n          return (\n            <Col xs={24} sm={12} lg={6} key={coin.name} className=\"crypto-card\">\n              <Link to={`/crypto/${coin.uuid}`}>\n                <Card\n                  hoverable\n                  title={`${coin.rank}. ${coin.name}`}\n                  extra={\n                    <img\n                      className=\"crypto-image\"\n                      src={coin.iconUrl}\n                      alt=\"icon\"\n                    />\n                  }\n                >\n                  <p>Price: {millify(coin.price)}</p>\n                  <p>Market Cap: {millify(coin.marketCap)}</p>\n                  <p>Daily Change: {millify(coin.change)}%</p>\n                </Card>\n              </Link>\n            </Col>\n          );\n        })}\n      </Row>\n    </>\n  );\n}\n","import { Avatar, Card, Col, Row, Select, Skeleton, Typography } from \"antd\";\n\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { useGetCryptosQuery } from \"../services/CryptoApi\";\nimport { useGetCryptoNewsQuery } from \"../services/CryptoNewsApi\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst demoImage =\n'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nexport default function News({ simplified }) {\n  const [newsCategory, setNewsCategory] = useState(\"cryptocurrency\");\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCatagory: newsCategory,\n    count: simplified ? 6 : 15,\n  });\n  const { data } = useGetCryptosQuery(100);\n\n  if (!cryptoNews) return <Skeleton active />;\n  return (\n    <>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"select a crypto\"\n            optionFilterProp=\"cildren\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n            {data.data.coins.map((coin) => (\n              <Option value={coin.name} key={coin.rank}>\n                {coin.name}\n              </Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n      <Row\n        gutter={[24, 24]}\n      >\n        {cryptoNews.value.map((news, i) => {\n          return (\n            <Col xs={24} sm={12} lg={8} key={news.datePublished + i}>\n              <Card hoverable className=\"news-card\">\n                <a href={news.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <div className=\"news-image-container\">\n                    <Title className=\"new-title\" level={4}>\n                      {news.name}\n                    </Title>\n\n                    <div className=\"img\">\n                      <img\n                        src={\n                          news.image\n                            ? news.image\n                              ? news.image.thumbnail\n                                ? news.image.thumbnail.contentUrl\n                                : demoImage\n                              : demoImage\n                            : demoImage\n                        }\n                        alt=\"news\"\n                      />\n                    </div>\n                  </div>\n\n                  <p>\n                    {news.description.length > 100\n                      ? `${news.description.substring(0, 100)}...`\n                      : news.description}\n                  </p>\n                  <div className=\"provider-container\">\n                    <div>\n                      <Avatar\n                        src={\n                          news.provider[0].image\n                            ? news.provider[0].image.thumbnail.contentUrl\n                            : demoImage\n                        }\n                        alt=\"news\"\n                      />\n\n                      <Text className=\"provider-name\">\n                        {news.provider[0].name}\n                      </Text>\n                    </div>\n                    <Text>\n                      {moment(news.datePublished)\n                        .startOf(\"ss\")\n                        .fromNow()}\n                    </Text>\n                  </div>\n                </a>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Col, Row, Skeleton, Statistic, Typography } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { useGetCryptosQuery } from \"../services/CryptoApi\";\nimport CryptoCurrencies from \"./CryptoCurrencies\";\nimport millify from \"millify\";\nimport News from \"./News\";\n\nconst { Title } = Typography;\n\nexport default function Homepage() {\n  const [offset, setOffset] = useState(0);\n  // const ref = useRef();\n  const { data, isFetching } = useGetCryptosQuery(10);\n  let globalstats = {};\n  useEffect(() => {\n    const onScroll = () => setOffset(window.pageYOffset);\n    // clean up code\n    window.removeEventListener(\"scroll\", onScroll);\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, []);\n\n  if (isFetching) return <Skeleton active></Skeleton>;\n  else globalstats = data.data.stats;\n\n\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">\n        {\" \"}\n        Global Crypto States\n      </Title>\n\n      <Row>\n        <Col span={12}>\n          <Statistic title=\"Total CryptoCurrencies\" value={globalstats.total} />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={millify(globalstats.totalExchanges)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap\"\n            value={millify(globalstats.totalMarketCap)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={millify(globalstats.total24hVolume)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Markets\"\n            value={millify(globalstats.totalMarkets)}\n          />\n        </Col>\n      </Row>\n\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies in the world\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/cryptocurrencies\">More</Link>\n        </Title>\n      </div>\n\n      <CryptoCurrencies simplified />\n\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/news\">Show More</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n}\n","import { Avatar, Col, Collapse, Row, Skeleton, Typography } from \"antd\";\nimport CollapsePanel from \"antd/lib/collapse/CollapsePanel\";\nimport HTMLReactParser from \"html-react-parser\";\nimport millify from \"millify\";\nimport React from \"react\";\n\nimport { useGetCryptoExchangeQuery } from \"../services/CryptoApi\";\n\nconst { Text } = Typography;\n\nexport default function Exchanges() {\n  const { data, isFetching } = useGetCryptoExchangeQuery();\n  if (isFetching) return <Skeleton active />;\n  const exchanges = data && data.data.exchanges;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>Btc Price</Col>\n        <Col span={6}>markets</Col>\n        <Col span={6}>Price</Col>\n      </Row>\n      <Row>\n        {exchanges &&\n          exchanges.map((exchange, i) => {\n            return (\n              <Col span={24}  key={exchange.uuid}>\n                <Collapse>\n                  <CollapsePanel\n                   \n                    showArrow={false}\n                    header={\n                      <Row key={exchange.uuid} className=\"inner-row\">\n                        <Col span={6}>\n                          <Text className=\"exchange-rank\">\n                            <strong>{exchange.rank}.</strong>\n                          </Text>\n                          <Avatar\n                            className=\"exchange-image\"\n                            src={exchange.iconUrl}\n                          />\n                          <Text>\n                            <strong className=\"exchange-name\">{exchange.name}</strong>\n                          </Text>\n                        </Col>\n                        <Col span={6}>${millify(exchange.btcPrice)}</Col>\n                        <Col span={6}>{exchange.numberOfMarkets}</Col>\n                        <Col span={6}>{millify(exchange.price)}</Col>\n                      </Row>\n                    }\n                  >\n                    <a href={exchange.coinrankingUrl} className=\"exchange-link\">{HTMLReactParser(exchange.coinrankingUrl || \"\")}</a>\n                  </CollapsePanel>\n                </Collapse>\n              </Col>\n            );\n          })}\n      </Row>\n    </>\n  );\n}\n","import { Col, Row, Typography } from \"antd\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, registerables } from \"chart.js\";\n\nChartJS.register(...registerables);\n\nconst { Title } = Typography;\n\nexport default function LineChart({ coinHistory, currentPrice, coinName }) {\n  const coinPrice = [];\n  const coinTimeStamp = [];\n\n  for (let i = 0; i < coinHistory.data.history.length; i += 1) {\n    coinPrice.push(coinHistory.data.history[i].price);\n\n    coinTimeStamp.push(\n      new Date(coinHistory.data.history[i].timestamp).toLocaleDateString()\n    );\n  }\n\n  const data = {\n    labels: coinTimeStamp,\n    datasets: [\n      {\n        type: \"line\",\n        label: \"Price to USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColor: \"#0071bd\",\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            suggestedMin: 0,\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-titel\">\n          {coinName} Price Chart\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            {coinHistory && coinHistory.data.change}%\n          </Title>\n          <Title level={5} className=\"current-price\">\n            Current {coinName} Price : $ {currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options}></Line>\n    </>\n  );\n}\n","import {\n  CheckOutlined,\n  DollarCircleOutlined,\n  ExclamationCircleOutlined,\n  FundOutlined,\n  MoneyCollectOutlined,\n  NumberOutlined,\n  StopOutlined,\n  ThunderboltOutlined,\n  TrophyOutlined,\n} from \"@ant-design/icons\";\nimport { Col, Row, Select, Typography, Skeleton } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\nimport millify from \"millify\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\nimport {\n  useGetCryptoDetilsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../services/CryptoApi\";\nimport LineChart from \"./LineChart\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nexport default function CryptoDetails() {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n\n  const { data, isFetching } = useGetCryptoDetilsQuery(coinId);\n  const { data: coinHistory, isLoading } = useGetCryptoHistoryQuery({\n    coinId: coinId,\n    timePeriod: timePeriod,\n  });\n\n  const cryptoDetails = data && data.data.coin;\n\n  if ( isLoading || isFetching) return <Skeleton active />;\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n \n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${cryptoDetails.allTimeHigh &&\n        cryptoDetails.allTimeHigh.price &&\n        millify(cryptoDetails.allTimeHigh && cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value:\n        cryptoDetails.supply && cryptoDetails.supply.confirmed ? (\n          <CheckOutlined />\n        ) : (\n          <StopOutlined />\n        ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${cryptoDetails.supply &&\n        cryptoDetails.supply.total &&\n        millify(cryptoDetails.supply && cryptoDetails.supply.total)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${cryptoDetails.supply &&\n        cryptoDetails.supply.circulating &&\n        millify(cryptoDetails.supply && cryptoDetails.supply.circulating)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <>\n      <Col className=\"coin-detail-container\">\n        <Col className=\"coin-heading-container\">\n          <Title level={2} className=\"coin-name\">\n            {cryptoDetails.name} ({cryptoDetails.symbol}) price\n          </Title>\n          <p>\n            {cryptoDetails.name} live price in us dollars. view value\n            statistics,market cap and supply.\n          </p>\n        </Col>\n\n        <Select\n          defaultValue={timePeriod}\n          className=\"select-timeperiod\"\n          placeholder=\"select time period\"\n          onChange={(value) => setTimePeriod(value)}\n        >\n          {time.map((date) => \n          {\n            \n           return (\n            <Option key={date}>{date}</Option>\n           )\n          })}\n        </Select>\n\n        <LineChart\n          coinHistory={coinHistory}\n          currentPrice={millify(cryptoDetails.price)}\n          coinName={cryptoDetails.name}\n        />\n\n        <Col className=\"stats-container\">\n          <Col className=\"coin-value-statistics\">\n            <Col className=\"coin-value-statistics-heading\">\n              <Title level={3} className=\"coin-details-heading\">\n                {cryptoDetails.name} value statistics\n              </Title>\n              <p>Ans overview showing the stats of {cryptoDetails.name}</p>\n            </Col>\n\n            {stats.map(({ icon, title, value}) => {\n            \n              return (\n                <Col className=\"coin-stats\" key={value}>\n                  <Col className=\"coin-stats-name\">\n                    <Text>{icon}</Text>\n                    <Text>{title}</Text>\n                  </Col>\n                  <Text className=\"stats\">{value}</Text>\n                </Col>\n              );\n            })}\n          </Col>\n          <Col className=\"other-stats-info\">\n            <Col className=\"coin-value-statistics-heading\">\n              <Title level={3} className=\"coin-details-heading\">\n                {cryptoDetails.name} Other statistics\n              </Title>\n              <p>Ans overview showing the stats of all cryptocurrencies</p>\n            </Col>\n\n            {genericStats.map(({ icon, title, value}) => {\n             \n              return (\n                <Col className=\"coin-stats\" key={value}>\n                  <Col className=\"coin-stats-name\">\n                    <Text>{icon}</Text>\n                    <Text>{title}</Text>\n                  </Col>\n                  <Text className=\"stats\">{value}</Text>\n                </Col>\n              );\n            })}\n          </Col>\n        </Col>\n        <Col className=\"coin-desc-link\">\n          <Row className=\"coin-desc\">\n            <Title level={3} className=\"coin-details-heading\">\n              What is {cryptoDetails.name}\n              {HTMLReactParser(cryptoDetails.description)}\n            </Title>\n          </Row>\n\n          <Col className=\"coin-links\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Links\n            </Title>\n            {cryptoDetails.links.map((link,i) => {\n             \n              return (\n                <Row className=\"coin-link\" key={link.type + i}>\n                  <Title className=\"link-name\" level={5}>\n                    {link.type}\n                  </Title>\n                  <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                    {link.name}\n                  </a>\n                </Row>\n              );\n            })}\n          </Col>\n        </Col>\n      </Col>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport Navbar from \"./components/Navbar\";\n\nimport Homepage from \"./components/Homepage\";\nimport CryptoCurrencies from \"./components/CryptoCurrencies\";\nimport Exchanges from \"./components/Exchanges\";\nimport News from \"./components/News\";\nimport CryptoDetails from \"./components/CryptoDetails\";\n\nexport default function App() {\n  return (\n    <>\n      <div className=\"app\">\n        <div className=\"navbar\">\n          <Navbar />\n        </div>\n        <div className=\"main\">\n          <Layout>\n            <div className=\"routes\">\n              <Routes>\n                <Route path=\"/\" element={<Homepage />}></Route>\n                <Route\n                  path=\"/cryptocurrencies\"\n                  element={<CryptoCurrencies />}\n                ></Route>\n                <Route\n                  exact\n                  path=\"/crypto/:coinId\"\n                  element={<CryptoDetails />}\n                ></Route>\n                <Route path=\"/exchanges\" element={<Exchanges />}></Route>\n                <Route path=\"/news\" element={<News />}></Route>\n              </Routes>\n            </div>\n          </Layout>\n        </div>\n      </div>\n      <div className=\"footer\">\n        <Typography.Title\n          level={5}\n          style={{ color: \"white\", textAlign: \"center\" }}\n        >\n          Cryptoverse <br></br>\n          All rights reserved\n        </Typography.Title>\n        <Space>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n          <Link to=\"/exchanges\">Excanges</Link>\n          <Link to=\"/news\">News</Link>\n        </Space>\n        <Typography.Title\n          level={5}\n          style={{ color: \"white\", textAlign: \"center\" }}\n        >\n          @2022 copyrights\n        </Typography.Title>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}